{
    "commands": {
        "help": {
            "name": "help",
            "description": "Show all commands"
        },
        "set_language": {
            "name": "set_language",
            "description": "Set the server's language",
            "options": {
                "language": "Choose the language to use"
            },
            "responses": {
                "success": "Server language set to: {language}",
                "error": "Error setting language, please try again later.",
                "unsupported": "Unsupported language option."
            }
        },
        "current_language": {
            "name": "current_language",
            "description": "Show the current server language",
            "responses": {
                "current": "Current server language: {language}"
            }
        },
        "cot_ai": {
            "name": "cot_ai",
            "description": "Use Chain of Thought reasoning (may take longer)",
            "options": {
                "prompt": "Prompt to process"
            },
            "responses": {
                "processing": "Processing your request...",
                "error": "Error: {error}",
                "thinking": "🤔 Thinking...",
                "step_header": "**Step {step}:**",
                "final_answer": "**Final Answer:**",
                "thinking_time": "Thinking time: {time}",
                "total_time": "Total thinking time: {time}"
            }
        },
        "calculate": {
            "name": "calculate",
            "description": "Calculate mathematical expression",
            "options": {
                "expression": "Mathematical expression to calculate"
            },
            "responses": {
                "processing": "Calculating...",
                "result": "Calculation result: {expression} = {result}",
                "error_too_long": "Error: Expression too long, please shorten and try again.",
                "error_undefined_function": "Error: Expression contains undefined function.",
                "error_unsupported_elements": "Error: Expression contains unsupported elements.",
                "error_general": "Calculation error: Unable to parse or calculate the expression."
            }
        },
        "remind": {
            "name": "remind",
            "description": "Set a reminder",
            "options": {
                "time": "Reminder time (e.g., 10 minutes later, or 2023-12-31 20:00:00)",
                "message": "Reminder message",
                "user": "User to remind (optional, defaults to self)"
            },
            "responses": {
                "received": "Reminder received",
                "invalid_format": "Invalid time format. Please use '10 minutes later' or '2023-12-31 20:00:00' format.",
                "future_time_required": "Reminder time must be in the future.",
                "confirm_setup": "Reminder set: Will remind {user} {message} in {duration}",
                "reminder_message": "{user} reminder: {message}",
                "reminder_sent": "Reminder sent to {user}",
                "error_setting": "Error setting reminder: {error}"
            },
            "time_units": {
                "years": "years",
                "months": "months",
                "weeks": "weeks",
                "days": "days",
                "hours": "hours",
                "minutes": "minutes",
                "seconds": "seconds"
            },
            "time_patterns": {
                "seconds_later": "{value} seconds later",
                "minutes_later": "{value} minutes later",
                "hours_later": "{value} hours later",
                "days_later": "{value} days later"
            }
        },
        "generate_image": {
            "name": "generate_image",
            "description": "Generate or edit image",
            "options": {
                "prompt": "Prompt for generating or editing image"
            },
            "responses": {
                "image_generated": "Image generated",
                "gemini_error": "Gemini API error: {error}",
                "all_methods_failed": "All image generation methods failed, please try again later.",
                "general_error": "Error generating image: {error}",
                "local_model_processing": "Generating with local model...",
                "local_model_complete": "Local model generation complete!"
            },
            "errors": {
                "generation_error": "Image generation process error: {error}",
                "local_model_error": "Local model generation error: {error}",
                "image_processing_error": "Image processing error: {error}",
                "api_error": "API request error: {error}",
                "gemini_generation_error": "Gemini API generation error: {error}"
            }
        },
        "internet_search": {
            "name": "internet_search",
            "description": "Perform internet search",
            "options": {
                "query": "Search query",
                "search_type": "Search type"
            },
            "choices": {
                "general": "General search",
                "image": "Image search",
                "youtube": "YouTube search",
                "url": "URL content",
                "eat": "What to eat"
            },
            "responses": {
                "searching": "Searching...",
                "processing": "Processing search results...",
                "completed": "Search completed",
                "unknown_type": "Unknown search type: {type}",
                "no_videos_found": "No related videos found, please try other keywords.",
                "youtube_result": "YouTube search result:\nTitle: {title}\nChannel: {channel}\nViews: {views}\nLink: {url}",
                "search_failed": "Search failed, please try other keywords. Error: {error}"
            },
            "errors": {
                "search_failed": "Search failed: {error}",
                "no_valid_url": "No valid URL found",
                "no_valid_content": "No valid content retrieved",
                "processing_error": "Error processing search results: {error}",
                "network_error": "Network connection error: {error}",
                "timeout_error": "Search request timeout",
                "invalid_query": "Invalid search query",
                "image_download_failed": "Image download failed",
                "image_element_not_found": "Image element or redirect URL not found",
                "eat_no_food": "No such food",
                "eat_system_error": "Originally wanted to recommend {keyword}, but sorry system error QQ: {error}"
            }
        },
        "userdata": {
            "name": "userdata",
            "description": "Manage user data",
            "options": {
                "action": "Choose action (read/save)",
                "user": "Target user",
                "user_data": "User data to save"
            },
            "choices": {
                "read": "Read",
                "save": "Save"
            },
            "responses": {
                "searching": "Searching user data...",
                "updating": "Updating data...",
                "data_found": "User <@{user_id}> data: {data}",
                "data_not_found": "User <@{user_id}> data not found.",
                "data_updated": "Updated user <@{user_id}> data: {data}",
                "data_created": "Created data for user <@{user_id}>: {data}",
                "invalid_action": "Invalid action. Please use 'read' or 'save'."
            }
        },
        "mode": {
            "name": "mode",
            "description": "Set playback mode",
            "choices": {
                "no_loop": "No loop",
                "loop_queue": "Loop queue",
                "loop_single": "Loop single"
            },
            "responses": {
                "success": "Playback mode set to: {mode}"
            }
        },
        "shuffle": {
            "name": "shuffle",
            "description": "Toggle shuffle",
            "responses": {
                "enabled": "Enabled",
                "disabled": "Disabled",
                "success": "Shuffle {status}"
            }
        },
        "play": {
            "name": "play",
            "description": "Play video (URL or keyword) or refresh UI",
            "options": {
                "query": "Video URL, search keyword, or leave blank to refresh UI"
            },
            "errors": {
                "no_voice_channel": "Please join a voice channel first!",
                "playlist_download_failed": "Error downloading playlist: {error}",
                "queue_full_title": "Playlist full",
                "queue_full_desc": "Please wait for current song to finish before adding new songs",
                "video_info_failed": "Error getting video info: {error}",
                "no_results": "No related videos found",
                "playback_error": "Error playing music",
                "attempting_next": "Attempting to play next song...",
                "playback_failed_title": "Playback failed",
                "playback_failed_desc": "Please use /play to replay",
                "nothing_playing": "Currently not playing any song."
            },
            "responses": {
                "playlist_added": "Added {count} songs to playlist (total {total})",
                "song_added": "Added to playlist: {title}",
                "select_song": "Please select song to play:",
                "search_results_title": "YouTube search results",
                "queue_finished": "Playlist finished!",
                "refreshed_ui": "Refreshed playback UI.",
                "recovering_state": "Detected abnormal playback state, attempting recovery..."
            }
        },
        "set_channel_mode": {
            "name": "set_channel_mode",
            "description": "Set channel response mode",
            "choices": {
                "unrestricted": "Unrestricted",
                "whitelist": "Whitelist",
                "blacklist": "Blacklist"
            },
            "responses": {
                "success": "Channel response mode set to: {mode}"
            }
        },
        "add_channel": {
            "name": "add_channel",
            "description": "Add channel to whitelist or blacklist",
            "choices": {
                "whitelist": "Whitelist",
                "blacklist": "Blacklist"
            },
            "responses": {
                "success": "Added channel {channel} to {list_type}",
                "already_exists": "Channel {channel} already exists in {list_type}"
            }
        },
        "remove_channel": {
            "name": "remove_channel",
            "description": "Remove channel from whitelist or blacklist",
            "choices": {
                "whitelist": "Whitelist",
                "blacklist": "Blacklist"
            },
            "responses": {
                "success": "Removed channel {channel} from {list_type}",
                "not_found": "Channel {channel} not found in {list_type}"
            }
        },
        "auto_response": {
            "name": "auto_response",
            "description": "Set channel auto response",
            "responses": {
                "success": "Set channel {channel} auto response to: {enabled}"
            }
        },
        "system_prompt": {
            "name": "system_prompt",
            "description": "System prompt management - unified interface",
            "ui": {
                "main_menu": {
                    "title": "🤖 System Prompt Management",
                    "description": "Welcome to the unified system prompt management interface! Please select the function to execute:",
                    "main_functions_title": "🔧 Main Functions",
                    "main_functions_description": "• **Set Prompt** - Set channel or server system prompt\n• **View Config** - View current system prompt configuration\n• **Module Edit** - Edit specific YAML module\n• **Copy Prompt** - Copy system prompt to other channels\n• **Remove Prompt** - Remove set system prompt\n• **Reset Config** - Reset system prompt configuration",
                    "usage_title": "📋 Usage Instructions",
                    "usage_description": "Click the buttons below to execute the corresponding function.\nSystem supports three-layer inheritance: YAML base → Server default → Channel specific",
                    "footer": "Note: All operations will perform permission checks for security"
                },
                "buttons": {
                    "set_prompt": "Set Prompt",
                    "view_config": "View Config",
                    "module_edit": "Module Edit",
                    "copy_prompt": "Copy Prompt",
                    "remove_prompt": "Remove Prompt",
                    "reset_config": "Reset Config",
                    "back_to_main": "Back to Main",
                    "channel_specific": "Channel Specific",
                    "server_default": "Server Default",
                    "channel_module": "Channel Module",
                    "server_module": "Server Module",
                    "current_channel": "Current Channel",
                    "show_inheritance": "Show Inheritance",
                    "remove_channel_prompt": "Remove Channel Prompt",
                    "remove_server_prompt": "Remove Server Prompt",
                    "reset_current_channel": "Reset Current Channel",
                    "reset_server_default": "Reset Server Default",
                    "reset_all_settings": "Reset All Settings",
                    "execute_copy": "Execute Copy",
                    "confirm": "Confirm",
                    "confirm_remove": "Confirm Remove",
                    "confirm_reset": "Confirm Reset",
                    "confirm_copy": "Confirm Copy",
                    "cancel": "Cancel",
                    "edit": "Edit",
                    "preview": "Preview"
                },
                "menus": {
                    "set_prompt_title": "⚙️ Set System Prompt",
                    "set_prompt_description": "Please select the scope to set",
                    "view_options_title": "👁️ View System Prompt Configuration",
                    "view_options_description": "Please select view options",
                    "module_edit_title": "📦 Module Editing",
                    "module_edit_description": "Please select module and scope to edit",
                    "module_scope_title": "📦 Edit {scope} Module",
                    "module_scope_description": "Please select module to edit",
                    "copy_prompt_title": "📋 Copy System Prompt",
                    "copy_prompt_description": "Please select source and target channels",
                    "remove_prompt_title": "🗑️ Remove System Prompt",
                    "remove_prompt_description": "Please select scope to remove",
                    "reset_config_title": "🔄 Reset System Prompt",
                    "reset_config_description": "Please select scope to reset"
                },
                "modals": {
                    "system_prompt": {
                        "title": "Set System Prompt",
                        "title_channel": "Set Channel #{channel} System Prompt",
                        "title_server": "Set Server Default System Prompt",
                        "title_edit": "Edit System Prompt",
                        "prompt_label": "System Prompt Content",
                        "prompt_placeholder": "Please enter system prompt content..."
                    },
                    "module_prompt": {
                        "title": "Set Module: {module}",
                        "prompt_label": "{module} Module Content",
                        "prompt_placeholder": "Please enter {module} module content..."
                    }
                },
                "selectors": {
                    "channel_placeholder": "Select Channel",
                    "from_channel_placeholder": "Select Source Channel",
                    "to_channel_placeholder": "Select Target Channel",
                    "module_placeholder": "Select Module to Edit",
                    "module_description": "Edit {module} Module"
                },
                "embeds": {
                    "system_prompt_title": "🤖 System Prompt Settings",
                    "preview_title": "🔍 System Prompt Preview",
                    "modules_title": "📦 Available Modules List"
                }
            },
            "messages": {
                "success": {
                    "set": "✅ System prompt set successfully",
                    "set_description": "Successfully set {scope} system prompt",
                    "remove": "✅ Removal successful",
                    "remove_description": "Successfully removed {scope} system prompt",
                    "copy": "✅ Copy successful",
                    "copy_description": "Successfully copied system prompt from #{from_channel} to #{to_channel}",
                    "reset": "✅ Reset successful",
                    "reset_description": "Successfully reset {scope} system prompt settings",
                    "operation_confirmed": "✅ Operation confirmed",
                    "operation_cancelled": "❌ Operation cancelled"
                },
                "info": {
                    "scope_channel": "Channel #{channel}",
                    "scope_server": "Server default",
                    "scope_all": "All",
                    "content_length": "Content length",
                    "created_by": "Created by",
                    "source": "Source",
                    "source_yaml": "YAML base prompt",
                    "source_server": "Server default + YAML",
                    "source_channel": "Channel specific + Server default + YAML",
                    "source_cache": "Cache",
                    "prompt_length": "{length} characters",
                    "language": "Language",
                    "channel": "Channel",
                    "inheritance_title": "Inheritance Hierarchy",
                    "inheritance_yaml": "🔹 YAML Base Prompt",
                    "inheritance_server": "🔸 Server Default Prompt",
                    "inheritance_channel": "🔸 Channel Specific Prompt",
                    "inheritance_none": "YAML Base Only",
                    "modules_description": "The following are YAML system prompt modules that can be overridden:",
                    "modules_usage": "When setting system prompts, you can use module override functionality to customize specific modules",
                    "modules_none": "No available modules",
                    "preview_content": "Content",
                    "preview_source": "Source",
                    "preview_length": "Length"
                },
                "confirm": {
                    "remove_channel": "Are you sure to remove system prompt for channel #{channel}?",
                    "remove_server": "Are you sure to remove server default system prompt?",
                    "reset_channel": "Are you sure to reset system prompt for channel #{channel}?",
                    "reset_server": "Are you sure to reset server default system prompt?",
                    "reset_all": "Are you sure to reset all system prompt settings?\n⚠️ This operation cannot be undone!",
                    "copy_simple": "Copy system prompt from #{from_channel} to #{to_channel}",
                    "copy_overwrite": "Copy system prompt from #{from_channel} to #{to_channel}\n⚠️ Target channel already has system prompt, will be overwritten",
                    "title_remove": "⚠️ Confirm Removal",
                    "title_reset": "⚠️ Confirm Reset",
                    "title_copy": "🔄 Confirm Copy"
                },
                "validation": {
                    "prompt_empty": "❌ System prompt content cannot be empty",
                    "prompt_too_long": "❌ System prompt too long (max 4000 characters), current {length} characters",
                    "same_channel": "❌ Source and target channels cannot be the same",
                    "module_empty": "❌ {module} module content cannot be empty"
                }
            },
            "errors": {
                "permission_denied": "You do not have permission to perform this operation",
                "channel_permission_denied": "You do not have permission to manage this channel's system prompt",
                "server_permission_denied": "You do not have permission to manage server-level system prompt",
                "prompt_not_found": "System prompt not found",
                "channel_not_found": "Specified channel not found",
                "validation_failed": "Validation failed: {error}",
                "operation_failed": "Operation failed: {error}",
                "system_error": "System error, please try again later",
                "timeout": "Operation timeout, please retry",
                "modal_error": "Error processing request: {error}",
                "unknown_error": "Unknown error occurred, please try again later",
                "modules_unavailable": "Unable to retrieve module list: {error}"
            },
            "modules": {
                "descriptions": {
                    "base": "Define AI's basic identity and core instructions, including bot name, creator info, etc.",
                    "personality": "Set AI's personality traits and expression style, including humor, politeness, language style, etc.",
                    "answering_principles": "Regulate AI's basic principles for answering questions, such as priority handling, source citation, etc.",
                    "language": "Set AI's language preference and expression, including main language, style elements, response length, etc.",
                    "professionalism": "Define AI's performance standards in professional topics, balancing humor and professionalism",
                    "interaction": "Set AI's interaction mode, including conversation style, focus management, etc.",
                    "formatting": "Regulate formatting rules in Discord environment, including Markdown syntax, mention formats, etc.",
                    "professional_personality": "Integrate professionalism and personalization settings to create a professional yet personalized AI performance"
                },
                "select_descriptions": {
                    "base": "Basic identity and core instructions",
                    "personality": "Personality traits and expression style",
                    "answering_principles": "Basic principles for answering questions",
                    "language": "Language preference and expression",
                    "professionalism": "Performance standards in professional topics",
                    "interaction": "Interaction mode and conversation style",
                    "formatting": "Discord formatting rules",
                    "professional_personality": "Professional personalization settings"
                },
                "modules_select_descriptions": {
                    "base": "Basic identity and core instructions",
                    "personality": "Personality traits and expression style",
                    "answering_principles": "Basic principles for answering questions",
                    "language": "Language preference and expression",
                    "professionalism": "Performance standards in professional topics",
                    "interaction": "Interaction mode and conversation style",
                    "formatting": "Discord formatting rules",
                    "professional_personality": "Professional personalization settings"
                },
                "help": {
                    "title": "📦 Module Descriptions",
                    "description": "The following modules can be edited individually to customize AI behavior:",
                    "usage_tip": "💡 Tip: When editing modules, default content will be shown as reference",
                    "inheritance_note": "⚠️ Note: Module editing will override the corresponding YAML module content"
                }
            },
            "user_experience": {
                "default_content": {
                    "loaded": "✅ Loaded default content as editing base",
                    "loading_failed": "⚠️ Failed to load default content, starting from blank",
                    "effective_prompt_loaded": "📝 Loaded current effective full system prompt",
                    "module_default_loaded": "📦 Loaded default content for {module} module"
                },
                "editing": {
                    "based_on_current": "Editing based on current effective system prompt...",
                    "based_on_default": "Editing based on default content for {module} module...",
                    "from_scratch": "Please enter new content..."
                },
                "guidance": {
                    "first_time_edit": "🎯 First time editing tip: You can modify based on default content",
                    "module_explanation": "💭 This module is responsible for: {description}",
                    "inheritance_info": "🔗 This setting will affect: {scope}"
                }
            }
        },
        "search_gif": {
            "name": "search_gif",
            "description": "Search GIF",
            "options": {
                "query": "Search query"
            },
            "responses": {
                "not_found": "No related GIF found.",
                "searching": "Searching GIF..."
            }
        },
        "upload_schedule": {
            "name": "upload_schedule",
            "description": "Upload schedule YAML file",
            "responses": {
                "success": "Schedule uploaded successfully!",
                "error": "Error uploading schedule: {error}"
            }
        },
        "query_schedule": {
            "name": "query_schedule",
            "description": "Query schedule",
            "choices": {
                "query_type": {
                    "full": "Full schedule",
                    "specific_time": "Specific time",
                    "next": "Next event"
                },
                "day": {
                    "Monday": "Monday",
                    "Tuesday": "Tuesday",
                    "Wednesday": "Wednesday",
                    "Thursday": "Thursday",
                    "Friday": "Friday",
                    "Saturday": "Saturday",
                    "Sunday": "Sunday"
                },
                "weekdays": {
                    "Monday": "Monday",
                    "Tuesday": "Tuesday",
                    "Wednesday": "Wednesday",
                    "Thursday": "Thursday",
                    "Friday": "Friday",
                    "Saturday": "Saturday",
                    "Sunday": "Sunday"
                }
            },
            "responses": {
                "success": "Query completed",
                "error": "Error querying schedule: {error}",
                "no_schedule": "No schedule found for you. Please use `/upload_schedule` to upload a schedule.",
                "user_not_found": "User not found.",
                "channel_not_found": "Channel not found.",
                "permission_denied": "You or the queried user does not have permission to view this channel.",
                "invalid_time_format": "Invalid time format. Please use YYYY-MM-DD HH:MM:SS format.",
                "invalid_query_type": "Invalid query type."
            }
        },
        "update_schedule": {
            "name": "update_schedule",
            "description": "Update or create schedule",
            "responses": {
                "success": "Schedule updated or created successfully!",
                "error": "Error updating or creating schedule: {error}"
            }
        },
        "show_template": {
            "name": "show_template",
            "description": "Show schedule template"
        },
        "model_management": {
            "name": "model_management",
            "description": "Manage AI models (developer only)",
            "choices": {
                "action": {
                    "unload": "Unload model",
                    "load": "Load model"
                }
            },
            "responses": {
                "model_unloaded": "Model unloaded.",
                "model_loaded": "Model loaded.",
                "operation_completed": "Operation completed.",
                "error": "Error executing operation: {error}",
                "model_already_unloaded": "Model already unloaded or not loaded."
            }
        },
        "botinfo": {
            "name": "botinfo",
            "description": "Show bot detailed information",
            "title": "🤖 Bot Information Overview",
            "fields": {
                "basic_stats": {
                    "name": "📊 Basic Statistics",
                    "servers": "Server Count",
                    "users": "User Count",
                    "text_channels": "Text Channels",
                    "voice_channels": "Voice Channels",
                    "loaded_cogs": "Loaded Cogs"
                },
                "performance": {
                    "name": "⚡ Performance Monitoring",
                    "latency": "Network Latency",
                    "memory_usage": "Memory Usage",
                    "uptime": "Uptime"
                },
                "cogs": {
                    "name": "🔧 Feature Modules",
                    "commands": "commands",
                    "no_cogs": "No loaded modules"
                }
            },
            "status": {
                "online": "🟢 Online",
                "idle": "🟡 Idle",
                "dnd": "🔴 Do Not Disturb",
                "offline": "⚫ Offline",
                "unknown": "❓ Unknown"
            }
        }
    },
    "general": {
        "no_description": "No description",
        "help_title": "Command Help",
        "help_description": "Show detailed information for all available commands"
    },
    "errors": {
        "permission_denied": "You do not have permission to execute this operation, admin only.",
        "command_failed": "Command execution failed: {error}",
        "invalid_input": "Invalid input.",
        "unknown_error": "Unknown error occurred, please try again later."
    },
    "system": {
        "chat_bot": {
            "language": {
                "answer_in": "Always answer in English",
                "style": "Appropriately use English idioms or playful expressions",
                "references": "Use [Title](<URL>) format for references"
            },
            "responses": {
                "processing": "Continuing output..."
            }
        },
        "cot_ai": {
            "description": "Chain of Thought AI System",
            "prompts": {
                "system_prompt": "You are a professional AI assistant with advanced reasoning capabilities. Your task is to provide detailed step-by-step thinking process explanations. For each step:\n\n1. Provide a clear, concise title describing the current reasoning stage.\n2. Elaborate your thinking process in detail in the content section.\n3. Decide whether to continue reasoning or provide final answer.\n4. Decide whether to use base model or advanced model for next reasoning step.\n\nResponse format:\nUse JSON format with keys: 'title', 'content', 'next_action' (value: 'continue' or 'final_answer'), 'model_selection' (value: 'advanced')\n\nKey instructions:\n- Use at least 5 different reasoning steps.\n- Acknowledge your limitations as an AI, clearly stating what you can and cannot do.\n- Actively explore and evaluate alternative answers or methods.\n- Critically evaluate your own reasoning; identify potential flaws or biases.\n- When re-evaluating, adopt a fundamentally different approach or perspective.\n- Use at least 3 different methods to derive or verify your answer.\n- Incorporate relevant domain knowledge and best practices in reasoning.\n- Quantify certainty levels for each step and final conclusion where applicable.\n- Consider potential edge cases or exceptions in reasoning.\n- Provide clear reasons for excluding alternative hypotheses.",
                "user_prompt_template": "Please use step-by-step reasoning to analyze this question: {question}"
            },
            "errors": {
                "api_error": "API request error: {error}",
                "parsing_error": "Response parsing error: {error}",
                "general_error": "Error processing request: {error}",
                "model_not_available": "Model not available: {error}",
                "json_decode_error": "JSON decode error: {error}"
            }
        },
        "language_manager": {
            "description": "Language Management System",
            "supported_languages": {
                "zh_TW": "Traditional Chinese",
                "zh_CN": "Simplified Chinese",
                "en_US": "English",
                "ja_JP": "Japanese"
            },
            "logs": {
                "directory_not_found": "Language directory not found: {directory}",
                "translation_load_error": "Error loading translation file {file_path}: {error}",
                "config_read_error": "Error reading language config: {error}",
                "config_save_error": "Error saving language config: {error}",
                "path_traversal_error": "Cannot continue path traversal {path}, current result is not dict: {result}",
                "format_error": "Error formatting translation, missing parameter: {error}",
                "translation_not_found": "Translation not found: {path}",
                "translation_error": "Error translating text: {error}"
            }
        },
        "gif_tools": {
            "description": "GIF Search and Management Tool",
            "logs": {
                "searching_gif": "Searching GIF: {query}",
                "found_gif": "Found GIF: {url}",
                "api_error": "Tenor API response error: {status_code}",
                "search_error": "GIF search error: {error}",
                "get_url_error": "Error getting GIF URL: {error}",
                "empty_query_warning": "Empty search query"
            }
        },
        "schedule": {
            "description": "Schedule Management System",
            "format": {
                "full_schedule_title": "**Full Schedule:**",
                "empty_schedule": "Schedule is empty.",
                "day_header": "**{day}:**",
                "no_events": "No events.",
                "time_column": "Time",
                "description_column": "Description",
                "specific_time_title": "**{time} Schedule:**",
                "no_events_found": "No events found for that time.",
                "next_event": "Next event: {time} - {description}",
                "no_next_event": "No next event found."
            },
            "errors": {
                "yaml_parse_error": "YAML parse error: {error}"
            }
        },
        "model_management": {
            "description": "AI Model Management System",
            "status": {
                "processing": "Processing model operation...",
                "loading": "Loading model...",
                "unloading": "Unloading model...",
                "completed": "Model operation completed"
            },
            "errors": {
                "permission_denied": "You do not have permission to execute this operation, developer only.",
                "model_not_found": "Specified model not found.",
                "operation_failed": "Model operation failed: {error}"
            },
            "userdata": {
                "description": "User Data Management System",
                "status": {
                    "processing": "Analyzing user data...",
                    "completed": "User data analysis completed",
                    "updating": "Updating user data...",
                    "searching": "Searching user data..."
                },
                "errors": {
                    "no_data": "No user data found",
                    "analysis_failed": "Data analysis failed: {error}",
                    "update_failed": "Update user data failed: {error}",
                    "ai_processing_failed": "AI processing user data error: {error}",
                    "database_error": "Database operation error: {error}",
                    "invalid_user": "Invalid user ID",
                    "permission_denied": "You do not have permission to access this user's data"
                },
                "logs": {
                    "data_retrieved": "Retrieved data for user {user_id}",
                    "data_updated": "Updated data for user {user_id}",
                    "data_created": "Created data for user {user_id}",
                    "ai_processing": "Using AI to process user data update",
                    "operation_completed": "User data operation completed"
                }
            }
        },
        "internet_search": {
            "description": "Internet Search System",
            "logs": {
                "search_started": "Search started: {query}",
                "results_found": "Found {count} search results",
                "processing_url": "Processing URL: {url}",
                "content_extracted": "Content extracted, length: {length} characters",
                "image_search_started": "Image search started: {query}",
                "eat_search_started": "Food recommendation search started: {keyword}"
            }
        },
        "remind": {
            "description": "Reminder System",
            "time_format": {
                "full_format": "{years}{months}{weeks}{days}{hours}{minutes}{seconds}",
                "year_format": "{value} years",
                "month_format": "{value} months",
                "week_format": "{value} weeks",
                "day_format": "{value} days",
                "hour_format": "{value} hours",
                "minute_format": "{value} minutes",
                "second_format": "{value} seconds"
            },
            "errors": {
                "parse_error": "Time parse error: {error}",
                "reminder_failed": "Reminder setup failed: {error}",
                "invalid_time_unit": "Invalid time unit: {unit}",
                "time_out_of_range": "Time out of range"
            },
            "logs": {
                "reminder_set": "Reminder set for user {user_id}: {duration} later",
                "reminder_triggered": "Reminder triggered: user {user_id}",
                "parse_success": "Time parsed successfully: {time_str} -> {parsed_time}",
                "parse_failed": "Time parse failed: {time_str}"
            }
        },
        "music": {
            "player": {
                "now_playing": "🎵 Now Playing",
                "uploader": "👤 Uploader",
                "duration": "⏱️ Duration",
                "views": "👀 Views",
                "progress": "🎵 Progress",
                "queue": "📜 Queue",
                "queue_empty": "Queue empty",
                "added_by": "Added by {user}",
                "live": "Live"
            },
            "controls": {
                "no_music": "❌ No music playing!",
                "no_songs": "❌ No songs available!",
                "previous": "⏮️ {user} went to previous",
                "paused": "⏸️ {user} paused the music",
                "resumed": "▶️ {user} resumed the music",
                "skipped": "⏭️ {user} skipped the music",
                "stopped": "⏹️ {user} stopped playback",
                "mode_changed": "🔄 {user} set mode to {mode}",
                "shuffle_toggled": "🔀 {user} {status} shuffle",
                "now_playing_prefix": "▶️ Now playing:",
                "queue_songs": "Queued songs:",
                "update_failed": "Failed to update playlist"
            },
            "select": {
                "timeout": "⌛ | Song selection timed out",
                "duration_label": "Duration: {duration}",
                "placeholder": "Select song to play",
                "queue_full": "❌ | Playlist full",
                "wait_message": "Please wait for current song to finish before adding new songs",
                "processing": "⏳ | Processing",
                "processing_desc": "Processing your selection, please wait...",
                "added": "✅ | Added to playlist: {title}",
                "error": "❌ | Error selecting song"
            },
            "autoplay": {
                "enabled": "Enabled",
                "disabled": "Disabled",
                "toggled": "Autoplay {status}",
                "playing": "Autoplay: Added {song_title} to queue"
            }
        }
    }
}
